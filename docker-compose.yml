version: '3.8'

services:
  web:
    container_name: web
    restart: unless-stopped
    build: 
      context: ./services/web
      dockerfile: Dockerfile.prod
    volumes:
      - static_volume:/usr/src/web/app/static
    expose:
      - 5000
    command: gunicorn -w 1 -b 0.0.0.0:5000 wsgi:server
    networks:
      - frontend

  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_volume:/usr/src/web/app/static
      - ./services/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./services/certbot/conf:/etc/letsencrypt
      - ./services/certbot/www:/var/www/certbot
      - ./services/nginx/bouncer.buzz.conf:/etc/nginx/sites-enabled/bouncer.buzz.conf
    depends_on:
      - web
    networks:
      - frontend
    command: /bin/sh -c "while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./services/certbot/conf:/etc/letsencrypt
      - ./services/certbot/www:/var/www/certbot
    depends_on:
      - nginx
    networks:
      - frontend
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"

networks:
  frontend:
    name: frontend

volumes:
  static_volume: